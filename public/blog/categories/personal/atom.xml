<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: personal | citizen428.blog()]]></title>
  <link href="http://citizen428.net/blog/categories/personal/atom.xml" rel="self"/>
  <link href="http://citizen428.net/"/>
  <updated>2012-10-11T23:18:03-04:00</updated>
  <id>http://citizen428.net/</id>
  <author>
    <name><![CDATA[Michael Kohl]]></name>
    <email><![CDATA[citizen428@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Motivating MethodFinder feedback]]></title>
    <link href="http://citizen428.net/blog/2011/04/08/motivating-methodfinder-feedback/"/>
    <updated>2011-04-08T00:00:00-04:00</updated>
    <id>http://citizen428.net/blog/2011/04/08/motivating-methodfinder-feedback</id>
    <content type="html"><![CDATA[<p>Apparently there was a certain demand for "MethodFinder":https://github.com/citizen428/methodfinder and after being mentioned on "Ruby5":http://ruby5.envylabs.com, it now has almost 150 followers on GitHub as well as over 200 downloads on Rubygems, which is more than I ever expected.  There's also been some very nice feedback on Twitter:</p>

<p><blockquote><p>MethodFinder, where have you been all my life?</p><footer><strong>@rbates</strong> <cite><a href='http://twitter.com/#!/metasoarous/status/55714164802453504'>twitter.com/#!/metasoarous/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p>[...] that MethodFinder is quite awesome though I'm not sure I've ever needed one</p><footer><strong>@anentropic</strong> <cite><a href='http://twitter.com/#!/anentropic/status/53086564179382272'>twitter.com/#!/anentropic/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p>MethodFinder is one of the coolest things about Squeak. Neat to see it's been ported to Ruby</p><footer><strong>@avibryant</strong> <cite><a href='http://twitter.com/#!/caldeiro/status/53078298682593280'>twitter.com/#!/caldeiro/status/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p>MethodFinder in ruby has to be the coolest Gem I've ever seen</p><footer><strong>@bilco105</strong> <cite><a href='http://twitter.com/bilco105/status/53052032973676544'>twitter.com/bilco105/status/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p>geniale</p><footer><strong>@microspino</strong> <cite><a href='http://twitter.com/microspino/status/53020300220182528'>twitter.com/microspino/status/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p>I loved Smalltalk's method finder. Now there is one for Ruby. Cool!</p><footer><strong>@wallingf</strong> <cite><a href='http://twitter.com/#!/wdjunaidi/status/52872212788678657'>twitter.com/#!/wdjunaidi/status/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p>This is one neat piece of code</p><footer><strong>@lukaszkorecki</strong> <cite><a href='http://twitter.com/lukaszkorecki/status/52824077538312192'>twitter.com/lukaszkorecki/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p>Hulk WANTS for #clojure.</p><footer><strong>@marick</strong> <cite><a href='http://twitter.com/#!/garybernhardt/status/52801103615635456'>twitter.com/#!/garybernhardt/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p>Holy shitballs, I need to learn SmallTalk</p><footer><strong>@batasrki</strong> <cite><a href='http://twitter.com/#!/batasrki/status/52799132351463424'>twitter.com/#!/batasrki/status/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p>This is great for Ruby newbies like me !</p><footer><strong>@stiiifff</strong> <cite><a href='http://twitter.com/#!/stiiifff/status/52792106460266496'>twitter.com/#!/stiiifff/status/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p></p></p><p><h1>Ruby method finder ftw!</h1></p><p><p></p><footer><strong>@kuroi_kenshi</strong> <cite><a href='http://twitter.com/kuroi_kenshi/status/52791499364118528'>twitter.com/kuroi_kenshi/status/&hellip;</a></cite></footer></blockquote></p>

<p><blockquote><p>Really amazing!!</p><footer><strong>@5pidou</strong> <cite><a href='http://twitter.com/5pidou/status/52788853618122752'>twitter.com/5pidou/status/&hellip;</a></cite></footer></blockquote></p>

<p>That's quite motivating and I'm currently experimenting with some ideas that might eventually lead to another tool useful for Ruby learners.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2010 reading list]]></title>
    <link href="http://citizen428.net/blog/2011/01/01/2010-reading-list/"/>
    <updated>2011-01-01T00:00:00-04:00</updated>
    <id>http://citizen428.net/blog/2011/01/01/2010-reading-list</id>
    <content type="html"><![CDATA[<p>A list of the books I read in 2010, sorted by finishing date. According to "Goodreads":http://www.goodreads.com/ that's roughly 18.5k pages, not bad considering I worked full-time and also studied on the side:</p>

<p><strong>The Disaster Area:</strong> J.G. Ballard
<strong>Balkan Blues:</strong> Petros Markaris
<strong>The Ministry of Special Cases:</strong> Nathan Englander
<strong>Diary:</strong> Chuck Palahniuk
<strong>Mathematik Fuer Das Bachelorstudium I: Grundlagen, Lineare Algebra Und Analysis:</strong> Mike Scherfner
<strong>A Case of Two Cities:</strong> Qiu Xiaolong
<strong>Strangers:</strong> Taichi Yamada
<strong>Goedel, Escher, Bach: An Eternal Golden Braid:</strong> Douglas R. Hofstadter
<strong>Haroun and the Sea of Stories:</strong> Salman Rushdie
<strong>Journey through Genius: The Great Theorems of Mathematics:</strong> William Dunham
<strong>Fight Club:</strong> Chuck Palahniuk
<strong>The Man Who Loved Only Numbers:</strong> Paul Hoffman
<strong>Vernon God Little:</strong> D.B.C. Pierre
<strong>Fermat's Last Theorem:</strong> Simon Singh
<strong>The Bell Jar:</strong> Sylvia Plath
<strong>Prime Obsession: Bernhard Riemann and the Greatest Unsolved Problem in Mathematics:</strong> John Derbyshire
<strong>Suite Francaise:</strong> Irene Nemirovsky
<strong>A Monk Swimming:</strong> Malachy McCourt
<strong>South of the Border, West of the Sun:</strong> Haruki Murakami
<strong>Dynamic Web Development with Seaside:</strong> Michael Davies
<strong>Wie der Soldat das Grammofon repariert:</strong> Sasa Stanisic
<strong>What I Talk About When I Talk About Running:</strong> Haruki Murakami
<strong>Learn Prolog Now!:</strong> Patrick Blackburn
<strong>Reise in die Nacht:</strong> Gianrico Carofiglio
<strong>Compiler Construction:</strong> Niklaus Wirth
<strong>All Families Are Psychotic:</strong> Douglas Coupland
<strong>The Little Schemer:</strong> Daniel P. Friedman
<strong>Shantaram:</strong> Gregory David Roberts
<strong>Zwei von zwei:</strong> Andrea De Carlo
<strong>Number Freak: From 1 to 200- The Hidden Language of Numbers Revealed:</strong> Derrick Niederman
<strong>Refactoring: Ruby Edition:</strong> Jay Fields
<strong>Practical Clojure:</strong> Luke VanderHart
<strong>Flatland: A Romance of Many Dimensions:</strong> Edwin Abbott Abbott
<strong>House of Leaves:</strong> Mark Z. Danielewski
<strong>What Happens Now:</strong> Jeremy Dyson
<strong>Maramba:</strong> Paula Koehlmeier
<strong>A Carrion Death:</strong> Michael Stanley
<strong>Little Brother:</strong> Cory Doctorow
<strong>Programming Erlang: Software for a Concurrent World:</strong> Joe Armstrong
<strong>The Hacker Crackdown: Law and Disorder on the Electronic Frontier:</strong> Bruce Sterling
<strong>Submarine:</strong> Joe Dunthorne
<strong>Holy Cow: An Indian Adventure:</strong> Sarah Macdonald
<strong>Der Gourmet. Leben und Leidenschaft eines chinesischen Feinschmeckers:</strong> Lu Wenfu
<strong>Sandman Slim:</strong> Richard Kadrey
<strong>Tod im April:</strong> Jose Luis Correa
<strong>How To Create Your Own Freaking Awesome Programming Language:</strong> Marc-Andre Cournoyer
<strong>A Case of Exploding Mangoes:</strong> Mohammed Hanif
<strong>Gute Macht:</strong> Fabian Faltin
<strong>Practical Common Lisp:</strong> Peter Seibel
<strong>The Book Thief:</strong> Markus Zusak
<strong>Eloquent JavaScript:</strong> Marijn Haverbeke
<strong>Programming in Haskell:</strong> Graham Hutton
<strong>The Half-Made World:</strong> Felix Gilman
<strong>Twitterature: The World's Greatest Books Retold Through Twitter:</strong> Alexander Aciman
<strong>Stupid History: Tales of Stupidity, Strangeness, and Mythconceptions Throughout the Ages:</strong> Leland Gregory
<strong>John the Revelator:</strong> Peter Murphy
<strong>MetaGame:</strong> Sam Landstrom</p>

<p>I also read the first 100 or so pages of "Land of Lisp" by Conrad Barski, but this will be in next year's reading list.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[(best-of 2010)]]></title>
    <link href="http://citizen428.net/blog/2010/12/31/best-of-2010/"/>
    <updated>2010-12-31T00:00:00-04:00</updated>
    <id>http://citizen428.net/blog/2010/12/31/best-of-2010</id>
    <content type="html"><![CDATA[<p>After reading "Fogus'":http://blog.fogus.me/about/ post "The best things in 2010":http://blog.fogus.me/2010/12/30/the-best-things-in-2010/, I decided to do one of my own.</p>

<p><strong>Great blog posts read:</strong></p>

<p>So many that I started the weekly "Information Overload":http://citizen428.net/archives/tag/informationoverload.</p>

<p><strong>Most viewed blog posts by me:</strong></p>

<ul>
<li>"30 free programming eBooks":http://citizen428.net/archives/434</li>
<li>"Review: Create Your Own Programming Language":http://citizen428.net/archives/1269</li>
<li>"Hey dude, where's our future?":http://citizen428.net/archives/1348</li>
<li>"Clojure: Deriving the Y Combinator in 7 Stolen Steps":http://citizen428.net/archives/1410</li>
<li>"Rewiring my brain: APL and J":http://citizen428.net/archives/436</li>
</ul>


<p><strong>Favorite technical books discovered (and read):</strong></p>

<ul>
<li>"Programming in Haskell" by Graham Hutton</li>
<li>"Programming Erlang: Software for a Concurrent World" by Joe Armstrong</li>
<li>"The Little Schemer" by Daniel P. Friedman</li>
<li>"Refactoring Ruby" by Jay Fields</li>
</ul>


<p>"Land of Lisp" by Conrad Barski and "The Joy of Clojure" by Michael Fogus and Chris Houser should also be on this list, but I haven't finished them yet.</p>

<p><strong>Favorite non-technical books read:</strong></p>

<ul>
<li>"House of Leaves" by Mark Z. Danielewski</li>
<li>"Wie der Soldat das Grammofon repariert" by Sasa Stanisic</li>
<li>"The Book Thief" by Markus Zusak</li>
<li>"Haroun and the Sea of Stories" by Salman Rushdie</li>
</ul>


<p><strong>Number of books read:</strong>
57</p>

<p><strong>Number of books written:</strong>
Still none :-(</p>

<p><strong>Favorite TV series about zombies:</strong>
The Walking Dead</p>

<p><strong>Favorite programming languages:</strong>
Ruby, Clojure, Erlang, Common Lisp, Haskell, J</p>

<p><strong>Programming languages used for projects both professional and not:</strong>
Ruby, Clojure, Bash, Python, JavaScript, Scheme, Haskell, SQL</p>

<p><strong>Cool new technology:</strong></p>

<ul>
<li>Kindle 3</li>
<li>Instapaper</li>
<li>Dropbox</li>
</ul>


<p><strong>Lifestyle changes:</strong></p>

<ul>
<li>Stopped smoking</li>
<li>Started training Wing Chun</li>
</ul>


<p><strong>Plans for 2011:</strong></p>

<ul>
<li>More Haskell</li>
<li>More Erlang</li>
<li>More Common Lisp</li>
<li>Release more open source code</li>
<li>Reduce size of unread book pile</li>
<li>More sports</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog moved from Serendipity to Wordpress]]></title>
    <link href="http://citizen428.net/blog/2010/08/13/blog-moved-from-serendipity-to-wordpress/"/>
    <updated>2010-08-13T00:00:00-04:00</updated>
    <id>http://citizen428.net/blog/2010/08/13/blog-moved-from-serendipity-to-wordpress</id>
    <content type="html"><![CDATA[<p>Ever since I started this blog in January 2005 it was powered by <a href="http://s9y.org/">Serendipity</a> (aka S9Y). Lately however I became more and more dissatisfied with it for various reasons, so I finally took the plunge and moved it over to Wordpress. The whole process was surprisingly painless, but did have some caveats, so I decided to post a short description of what I did:</p>

<p>There is a script for migrating S9Y to Wordpress that has been floating around for a while and has been patched/modified by various people. Luckily I found version <a href="http://snowulf.com/2010/06/11/serendipity-to-wordpress-post-import/">1.4</a>, which got updated very recently (June 2010). For some reason it didn't work for me when I tried to migrate between S9Y 1.5.3 and Wordpress 3.0.1 directly, so I installed Wordpress 2.9.2 first, migrated the content and then upgraded to the most recent version. The import itself was very smooth and successful, categories (which I stopped using a long time ago), users, posts and comments all made it to the new blog! Once you are done importing, you can run several SQL statements provided in <a href="http://code.google.com/p/snowulf/source/browse/trunk/wordpress/s9y-to-wp/readme.txt">readme.txt</a>, so that your new posts will have the same IDs as the old ones, which is necessary for redirecting. For that purpose I added some <a href="http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html">Apache mod_rewrite </a> rules, so that old post URLs will redirect to the new locations (and so will the RSS and Atom feed so subscriptions don't get interrupted):
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>RewriteEngine on
</span><span class='line'>RewriteRule ^/archives/([0-9]+)-.*$ /archives/$1 [R,L]
</span><span class='line'>RewriteRule ^/feeds/index.rss2 /feed [R,L]
</span><span class='line'>RewriteRule ^/feeds/atom.xml /feed/atom [R,L]</span></code></pre></td></tr></table></div></figure></notextile></div>
There's still quite a bit to do though: first I need to find a theme I like (I might even stick with the one I'm using now and just tweak it a bit), then lots of posts need fixes to their formatting because they were written in <a href="http://www.textism.com/tools/textile/">Textile</a> (I fixed the most recent 2 so far, it's rather quick and painless). There are also some widgets and static pages I want to move over from the old blog, so I guess this site will be a work in progress for a while. I am however very satisfied with Wordpress and glad I finally did this move I put off for so long.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Good math teachers are like unicorns]]></title>
    <link href="http://citizen428.net/blog/2010/04/23/good-math-teachers-are-like-unicorns/"/>
    <updated>2010-04-23T00:00:00-04:00</updated>
    <id>http://citizen428.net/blog/2010/04/23/good-math-teachers-are-like-unicorns</id>
    <content type="html"><![CDATA[<p>There's a striking similarity between unicorns and good math teachers: both are mythical creatures you really wish existed whereas empirical evidence strongly suggests they don't.</p>

<p>Looking back at my own experience in Austrian public schools, the average quality of math teaching was atrocious. It's only partly the teachers' fault though, since math generally seems to be taught in a rather frustrating way. There's a definite tendency to leave out vital information like why a mathematical method was created, what problem it was meant to solve and how it evolved over time. Instead of starting from the perspective of a tangible problem and looking at the development of methods to solve it, we get a high-level abstract view and are kinda left in the dark as to how that ever may be useful, leading to the common misconception that "math is useless in everyday life". It's a bit like teaching kids about DNA and expecting them to see deer frolicking in the forest before their mental eye. That being said, it still often <i>is</i> the teacher's fault: sometimes it feels like schools are elephant graveyards where old mathematicians go to die, so poor students often end up with grumpy frustrated people who barely seem to remember why they got into math in the first place and therefore definitely don't create the spark necessary to ignite a young person's mind.</p>

<p>In retrospect, this makes me quite angry. As long as I can remember I have loved numbers in an almost obsessive way. When I get bored I start counting things around me, try to find patterns in tiles or do random calculations. So of course I always loved math in school and tended to do very well. Then 7th grade came and the subject slowly started to get more abstract. Bad methodology, combined with awful teaching and beginning puberty on my part were enough to make math my most feared subject in the years to come. Occasionally my original enthusiasm for the subject resurfaced and my grades got a bit better again when we began with calculus. Math still mainly was a major pain in the behind for me though. This only changed when at age 17 I finally convinced my parents of how broken the Austrian public school system was and switched to a private school where class attendance was voluntary and everything more or less worked like it later would at uni. This was the only time I can remember where I was lucky enough to have a good math teacher. In fact he wasn't only good, he was excellent and is probably one of the main reasons why I'm now studying math. He did an incredible job making us understand the beauty of the subject and managed to get good results out of almost everyone by never accepting an "I don't understand this". He would just go back to the last line the student understood and start working from there: "How did we get to this line?", "Do you see what substitution we did?", "Now how do you think we got from B to C?" etc. Using this method, the students generally managed to solve the exercises and obviously were proud and therefore slowly got over the "math is not for me" type of thinking. As an additional benefit everyone who was afraid of asking also got a very detailed explanation and would be more likely to ask a question him- or herself next time. Our teacher also was very good at assessing a student's level and therefore could give you tailor-made exercises to avoid frustration or boredom. His classes were definitely among the best I saw in almost 20 years of formal education.</p>

<p>Anyway, when it was time to decide what to study at uni, part of me wanted to do math because of my original love for the subject and the great classes I just had experienced. The greater part however still hadn't gotten over the feeling of insufficiency accumulated over the years of lost interest due to bad teaching, so in the end I settled on studying Chinese, which was fun but a rather random choice and not all that useful in hindsight. Only after I turned 30 last summer I finally decided I want to give math at university level a try and signed up for an undergrad math degree at a distance learning university. So far everything seems to be going well - given the fact that I didn't do much math in the last 10 years except for reading the occasional book on the subject - and I'm really enjoying it.</p>

<p>I don't really believe I will ever become a great mathematician, but it is quite frustrating that school almost stopped me from at least trying.</p>
]]></content>
  </entry>
  
</feed>
