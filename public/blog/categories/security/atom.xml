<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: security | citizen428.blog()]]></title>
  <link href="http://citizen428.net/blog/categories/security/atom.xml" rel="self"/>
  <link href="http://citizen428.net/"/>
  <updated>2012-06-20T16:21:45+02:00</updated>
  <id>http://citizen428.net/</id>
  <author>
    <name><![CDATA[Michael Kohl]]></name>
    <email><![CDATA[citizen428@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Information Overload 2012-06-17]]></title>
    <link href="http://citizen428.net/blog/2012/06/17/information-overload-2012-06-17/"/>
    <updated>2012-06-17T00:00:00+02:00</updated>
    <id>http://citizen428.net/blog/2012/06/17/information-overload-2012-06-17</id>
    <content type="html"><![CDATA[<p><blockquote><p>[H]e worries that economic and ecological collapse will come much sooner than we think, and that the time to start behaving in an anarchic way—taking care of ourselves instead of deferring to government and big business—is now. He wants, in his words, for people to have a "soft landing" when the global shit hits the global fan.</p><footer><strong>Brendan Kiley</strong> <cite><a href='http://www.thestranger.com/seattle/anarchy-is-boring/Content?oid=13597692'>Anarchy Is Boring</a></cite></footer></blockquote></p>

<ul>
<li><a href="http://esr.ibiblio.org/?p=4386">Why I think RMS is a fanatic, and why that matters.</a><br>The most current "RMS is a fanatic" post by ESR. While he may be right that pragmatism sells better, I always admired Stallman's approach.</li>
<li><a href="http://chronicle.com/article/Why-Privacy-Matters-Even-if/127461/">Why Privacy Matters Even if You Have 'Nothing to Hide'</a><br>Most of the readers of my blog are probably aware of everything written in this article, but it's a very good resource for sending to people who don't follow the privacy debate much.</li>
<li><a href="http://arstechnica.com/security/2012/06/flame-crypto-breakthrough/">Crypto breakthrough shows Flame was designed by world-class scientists</a><br>Some more background on <a href="http://en.wikipedia.org/wiki/Flame_(malware)">Flame</a>.</li>
<li><a href="http://www.thestranger.com/seattle/anarchy-is-boring/Content?oid=13597692">Anarchy Is Boring</a><br>This is a good article a lot of people calling themselves anarchists should read.</li>
<li><a href="http://www.heise.de/tp/artikel/37/37094/1.html">G8-Gipfel in Genua - Letzter Akt mit hohen Haftstrafen?</a><br>11 years after the <a href="http://en.wikipedia.org/wiki/27th_G8_summit#Protests">protests</a> it seems like several protesters will have to go for a long time (in German).</li>
<li><a href="http://www.whatwherewhy.me/blog/2012/06/11/the-male-gaze/">The Male Gaze</a><br>I hope that one day I can stop including articles about discrimation against women in tech.</li>
<li><a href="http://home.tiac.net/~cri/1998/toilet.html">A game theoretic approach to the toilet seat problem</a><br>Mathematics to the rescue.</li>
<li><a href="http://www-cs-students.stanford.edu/~cale/cs201/apartheid.comp.html">The Use of Computers to Support Oppression</a><br>On the role of computers in the South African apartheid system.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Information Overload 2012-06-10]]></title>
    <link href="http://citizen428.net/blog/2012/06/10/information-overload-2012-06-10/"/>
    <updated>2012-06-10T00:00:00+02:00</updated>
    <id>http://citizen428.net/blog/2012/06/10/information-overload-2012-06-10</id>
    <content type="html"><![CDATA[<p><blockquote><p>[S]omeone who takes MDPV may find himself feeling extremely paranoid and panicky, but he’s unlikely to believe that a giant lizard wearing a tuxedo is about to eat his cat.</p><footer><strong>David DiSalvo</strong> <cite><a href='http://www.forbes.com/sites/daviddisalvo/2012/06/05/the-straight-dope-on-what-bath-salts-do-to-your-brain-and-why-theyre-dangerous/'>The Straight Dope on What Bath Salts Do to Your Brain and Why They're Dangerous</a></cite></footer></blockquote></p>

<ul>
<li><a href="http://www.nytimes.com/2012/06/03/opinion/sunday/we-only-think-we-know-the-truth-about-salt.html?_r=2&amp;pagewanted=all">Salt, We Misjudged You</a><br>Like with many things, I think listening to your body will solve this controversy in a rather natural manner.</li>
<li><a href="http://www.news.com.au/breaking-news/world/german-teen-shouryya-ray-solves-300-year-old-mathematical-riddle-posed-by-sir-isaac-newton/story-e6frfkui-1226368490521">German teen Shouryya Ray solves 300-year-old mathematical riddle posed by Sir Isaac Newton</a><br>In case that's not impresive enough, he solved another mathematical problem (from the 19th century) too.</li>
<li><a href="http://www.bbc.co.uk/nature/18294324">How tiny insects survive the rain</a><br>Nature definitely has a cool bag of tricks.</li>
<li><a href="http://www.forbes.com/sites/daviddisalvo/2012/06/05/the-straight-dope-on-what-bath-salts-do-to-your-brain-and-why-theyre-dangerous/">The Straight Dope on What Bath Salts Do to Your Brain and Why They're Dangerous</a><br>An informative and rationale article, without the usual cannibal and zombie panic.</li>
<li><a href="http://www.plausiblydeniable.com/opinion/gsf.html">Five Geek Social Fallacies</a><br>I'll try to look more closely for these in the geek communities I'm a part of.</li>
<li><a href="http://io9.com/5916970/the-22-rules-of-storytelling-according-to-pixar">The 22 rules of storytelling, according to Pixar</a><br>Seemingly simple rules that make the Pixar movies as great as they are.</li>
<li><a href="http://henryschwarz.blogspot.co.uk/2012/06/black-hatted.html">Black Hatted</a><br>Interesting post on how an ATM manufacturerer cooperated with a security researcher. More companies should behave this way.</li>
<li><a href="http://mondediplo.com/2012/06/04poland">The EU’s far frontier</a><br>How joining the Schengen area was detrimental to the development of Eastern Poland.</li>
<li><a href="http://www.yosefk.com/blog/work-on-unimportant-problems.html">Work on unimportant problems</a><br>While there are things I disagree with in this article, the overall message is something that strikes a chord with me.</li>
<li><a href="http://www.foreignpolicy.com/articles/2012/06/08/the_cup_and_the_controversy?page=full">The Cup Runneth Over</a><br>Some critical thoughts on Ukraine in light of the Euro Cup.</li>
</ul>


<p><blockquote><p>Review of Black Hat by Obi-Wan Kenobi: "You will never find a more wretched hive of scum and villainy."</p><footer><strong>Henry Schwarz</strong> <cite><a href='http://henryschwarz.blogspot.co.uk/2012/06/black-hatted.html'>Black Hatted</a></cite></footer></blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Information Overload 2012-02-12]]></title>
    <link href="http://citizen428.net/blog/2012/02/12/information-overload-2012-02-12/"/>
    <updated>2012-02-12T00:00:00+01:00</updated>
    <id>http://citizen428.net/blog/2012/02/12/information-overload-2012-02-12</id>
    <content type="html"><![CDATA[<p><blockquote><p>In a nation that celebrates freedom of religion like no other, freedom not to be religious at all can be as hard to exercise as the right to swim the Atlantic.</p><footer><strong>Julian Baggini</strong> <cite><a href='http://www.ft.com/intl/cms/s/2/d2239780-4d4e-11e1-8741-00144feabdc0.html'>Atheism in America</a></cite></footer></blockquote></p>

<ul>
<li><a href="http://www.economist.com/node/21542763">The magic number</a><br>While I don't share some of the author's opinions, the new Indian identity scheme certainly could have a positive influence on many people's lives.</li>
<li><a href="http://www.ft.com/intl/cms/s/2/d2239780-4d4e-11e1-8741-00144feabdc0.html">Atheism in America</a><br>Interesting article about the lives of atheists in the United States. I'm afraid there are parts of Austria where it wouldn't be too different.</li>
<li><a href="http://blog.ioactive.com/2012/02/ssl-traffic-analysis-on-google-maps.html">I can still see your actions on Google Maps over SSL</a><br>A proof of concept for SSL traffic analyses/side channel-attacks, with an easy to understand video for your less security-aware friends.</li>
<li><a href="http://www.independent.co.uk/news/uk/crime/government-may-sanction-nerveagent-use-on-rioters-scientists-fear-6612084.html">Government 'may sanction nerve-agent use on rioters', scientists fear</a><br>Brave new world, UK style.</li>
<li><a href="http://www.universityobserver.ie/2012/02/08/the-man-who/">The Man Who</a><br>An article about Steven Moffat, writer of some of my favorite TV shows.</li>
<li><a href="http://skeptoid.com/episodes/4219">Stalin's Human-Ape Hybrids</a><br>Skeptoid debunks the myth that Stalin tried to create an army of human-ape hybrids.</li>
<li><a href="http://www.good.is/post/a-happy-flourishing-city-with-no-advertising">A Happy, Flourishing City With No Advertising</a><br>In 2006, the mayor of São Paulo banned all billboards and similar forms of advertising, in order to reduce "visual pollution".</li>
<li><a href="http://www.theatlantic.com/magazine/archive/1977/10/the-gentle-art-of-poverty/8241/?single_page=true/">The Gentle Art of Poverty</a><br>This article from 1977 tells the story of an old man dealing with poverty in Southern California. An intense read, despite the bad copy editing.</li>
<li><a href="http://www.wired.com/epicenter/2012/02/perpetual-window-into-gmail/">Wired Opinion: The Perpetual, Invisible Window Into Your Gmail Inbox</a><br>Personally I regularly check all app permissions. I also have a Gmail label "Registrations" where I store signup mails and occasionally work through that and close/delete all accounts I don't use regularly.</li>
<li><a href="http://derstandard.at/1328507315096/Ich-empfand-eine-unbaendige-Wut">"Ich empfand eine unbändige Wut"</a><br>Interview with a former member of El Salvador's guerilla movement, who was part of the first unit to discover the <a href="http://en.wikipedia.org/wiki/El_Mozote_massacre">El Mozote massacre</a>.</li>
</ul>


<p><blockquote><p>Doctor Who, for the uninitiated, is a show featuring an “eleven-hundred-and-three-year-old” alien who travels through space and time in a police box (called the TARDIS – Time and Relative Dimension in Space), fighting monsters and finding friends to take along with him, only ninety per cent of which have been very attractive women.</p><footer><strong>Emer Sugrue</strong> <cite><a href='http://www.universityobserver.ie/2012/02/08/the-man-who/'>The Man Who</a></cite></footer></blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Information Overload 2012-01-29]]></title>
    <link href="http://citizen428.net/blog/2012/01/29/information-overload-2012-01-29/"/>
    <updated>2012-01-29T00:00:00+01:00</updated>
    <id>http://citizen428.net/blog/2012/01/29/information-overload-2012-01-29</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://benwerd.com/blog/2012/01/22/die-hollywood-die/">Die, Hollywood, die!</a><br>A voice of reason in the <a href="http://ycombinator.com/rfs9.html">"Kill Hollywood"</a> discussion.</li>
<li><a href="http://www.wired.com/magazine/2012/01/ff_ux/all/1">The New French Hacker-Artist Underground</a><br>The French group UX sneaks into places to restore them (or the art inside them). A fascinating read.</li>
<li><a href="http://www.wienerzeitung.at/nachrichten/kultur/medien/?em_cnt=427905">Die Opfer von Niklaas und Perrine</a><br>Granted, this article makes most sense if you were born in the 1970s (or early 1980s) and grew up in Austria, but I still wanted to include it here (in German).</li>
<li><a href="https://blog.torproject.org/blog/tale-new-censors-vodafone-uk-t-mobile-uk-o2-uk-and-t-mobile-usa">A tale of new censors - Vodafone UK, T-Mobile UK, O2 UK, and T-Mobile USA</a><br>If you think only China and dictatorships in the Middle East censor the internet, think again.</li>
<li><a href="http://www.humbledmba.com/public-speaking-for-normal-people">Public speaking for normal people</a><br>Public speaking is a difficult topic for me. I like doing it, but tend to be rather nervous. Once I'm done I always feel like my talks were horrible, but feedback usually suggests they weren't. This post has some interesting ideas which I'm eager to try out.</li>
<li><a href="http://whorulesamerica.net/power/investment_manager.html">An Investment Manager's View on the Top 1%</a><br>Seems like the "Occupy" movement should have adopted we are the 99.9% as a slogan.</li>
<li><a href="http://danielmiessler.com/study/infosec_interview_questions/">Information Security Interview Questions</a><br>If you want to get into information security, you should read this article for a little self assessment.</li>
<li><a href="http://arstechnica.com/tech-policy/news/2012/01/mega-man-the-bizarre-rise-and-sudden-downfall-of-kim-dotcom.ars/1">Mega-man: The fast, fabulous, fraudulent life of Megaupload's Kim Dotcom</a><br>Interesting portrait of <a href="http://en.wikipedia.org/wiki/Kim_Dotcom">Kim Dotcom</a>, the man who's all over the news again.</li>
<li><a href="http://lists.busybox.net/pipermail/busybox/2010-December/074114.html">Understanding the bin, sbin, usr/bin , usr/sbin split</a><br>This mailing list post is an interesting bit of Unix trivia.</li>
<li><a href="http://reason.com/archives/2012/01/26/how-much-is-an-astronauts-life-worth">How Much Is an Astronaut’s Life Worth?</a><br>Some interesting points on a controversial topic.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Writing nmap scripts with Lua]]></title>
    <link href="http://citizen428.net/blog/2011/12/23/writing-nmap-scripts-with-lua/"/>
    <updated>2011-12-23T13:54:00+01:00</updated>
    <id>http://citizen428.net/blog/2011/12/23/writing-nmap-scripts-with-lua</id>
    <content type="html"><![CDATA[<p>About 2 weeks ago I finally started looking into <a href="http://www.lua.org/">Lua</a>, a language that's been on my radar for a while but that I never really got around to play with so far. Then I realized that the <a href="http://nmap.org/book/nse.html">Nmap Scripting Engine</a> uses Lua scripts, so I had an excuse to hack on this stuff for work. Here's my first small <code>nmap</code> script, which will extract the contents of the generator meta tag if there is one. It's nothing funky, but it shows how easy it is to write custom scripts for <code>nmap</code> thanks to the provided libraries like <code>http</code> and <code>shortport</code>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">description</span> <span class="o">=</span> <span class="s">[[</span>
</span><span class='line'><span class="s">Displays the contents of the &quot;generator&quot; meta tag if there is one.</span>
</span><span class='line'><span class="s">]]</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">author</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">Michael Kohl&quot;</span>
</span><span class='line'><span class="n">license</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">Same as Nmap--See http://nmap.org/book/man-legal.html&quot;</span>
</span><span class='line'><span class="n">categories</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&quot;</span><span class="s">discovery&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">safe&quot;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">-- documentation skipped&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nb">require</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">http&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">require</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">shortport&#39;</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">portrule</span> <span class="o">=</span> <span class="n">shortport</span><span class="p">.</span><span class="n">http</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">action</span> <span class="o">=</span> <span class="n">function</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">)</span>
</span><span class='line'>   <span class="kd">local</span> <span class="n">response</span><span class="p">,</span> <span class="n">loc</span><span class="p">,</span> <span class="n">generator</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="n">response</span> <span class="o">=</span> <span class="n">http</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">,</span> <span class="s1">&#39;</span><span class="s">/&#39;</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="c1">-- deal with redirects</span>
</span><span class='line'>   <span class="k">while</span> <span class="n">response</span><span class="p">[</span><span class="s1">&#39;</span><span class="s">status-line&#39;</span><span class="p">]:</span><span class="n">lower</span><span class="p">():</span><span class="n">match</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">&lt;sup&gt;http/1.1&lt;/sup&gt; 30[12]&quot;</span><span class="p">)</span> <span class="k">do</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">loc</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">header</span><span class="p">[</span><span class="s1">&#39;</span><span class="s">location&#39;</span><span class="p">]</span>
</span><span class='line'>  <span class="n">response</span> <span class="o">=</span> <span class="n">http</span><span class="p">.</span><span class="n">get_url</span><span class="p">(</span><span class="n">loc</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="k">end</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="k">for</span> <span class="n">line</span> <span class="k">in</span> <span class="n">response</span><span class="p">.</span><span class="n">body</span><span class="p">:</span><span class="n">gmatch</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">[&lt;sup&gt;</span><span class="se">\r\n</span><span class="s">]+&quot;</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">sup</span><span class="o">&gt;</span> <span class="k">do</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">generator</span> <span class="o">=</span> <span class="n">line</span><span class="p">:</span><span class="n">match</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">&amp;lt;meta name=&quot;generator&quot; content=&quot;(.*)&quot; /&amp;gt;&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">generator</span> <span class="k">then</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">generator</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>Update:</strong> Here's the version that's now part of <code>nmap</code>, it even made it to the default category.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">description</span> <span class="o">=</span> <span class="s">[[</span>
</span><span class='line'><span class="s">Displays the contents of the &quot;generator&quot; meta tag if there is one.</span>
</span><span class='line'><span class="s">]]</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">author</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">Michael Kohl&quot;</span>
</span><span class='line'><span class="n">license</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">Same as Nmap--See http://nmap.org/book/man-legal.html&quot;</span>
</span><span class='line'><span class="n">categories</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&quot;</span><span class="s">default&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">discovery&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">safe&quot;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">-- documentation skipped&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nb">require</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">http&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">require</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">shortport&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">require</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">stdnse&#39;</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">-- helper function</span>
</span><span class='line'><span class="kd">local</span> <span class="n">follow_redirects</span> <span class="o">=</span> <span class="n">function</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
</span><span class='line'>   <span class="kd">local</span> <span class="n">pattern</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">&lt;sup&gt;[hH][tT][tT][pP]/1.[01]&lt;/sup&gt; 30[12]&quot;</span>
</span><span class='line'>   <span class="kd">local</span> <span class="n">response</span> <span class="o">=</span> <span class="n">http</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="k">while</span> <span class="n">response</span><span class="p">[</span><span class="s1">&#39;</span><span class="s">status-line&#39;</span><span class="p">]:</span><span class="n">match</span><span class="p">(</span><span class="n">pattern</span><span class="p">)</span> <span class="ow">and</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="k">do</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">n</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">loc</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">header</span><span class="p">[</span><span class="s1">&#39;</span><span class="s">location&#39;</span><span class="p">]</span>
</span><span class='line'>  <span class="n">response</span> <span class="o">=</span> <span class="n">http</span><span class="p">.</span><span class="n">get_url</span><span class="p">(</span><span class="n">loc</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="k">end</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="k">return</span> <span class="n">response</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">portrule</span> <span class="o">=</span> <span class="n">shortport</span><span class="p">.</span><span class="n">http</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">action</span> <span class="o">=</span> <span class="n">function</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">)</span>
</span><span class='line'>   <span class="kd">local</span> <span class="n">response</span><span class="p">,</span> <span class="n">loc</span><span class="p">,</span> <span class="n">generator</span>
</span><span class='line'>   <span class="kd">local</span> <span class="n">path</span> <span class="o">=</span> <span class="n">stdnse</span><span class="p">.</span><span class="n">get_script_args</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">http-generator.path&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="s1">&#39;</span><span class="s">/&#39;</span>
</span><span class='line'>   <span class="kd">local</span> <span class="n">redirects</span> <span class="o">=</span> <span class="nb">tonumber</span><span class="p">(</span><span class="n">stdnse</span><span class="p">.</span><span class="n">get_script_args</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">http-generator.redirects&#39;</span><span class="p">))</span> <span class="ow">or</span> <span class="mi">3</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="c1">-- Worst case: &lt;meta name=Generator content=&quot;Microsoft Word 11&quot;&gt;</span>
</span><span class='line'>   <span class="kd">local</span> <span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">&lt;meta name=&quot;?generator&quot;? content=&quot;([^</span><span class="se">\&quot;</span><span class="s">]*)&quot; ?/?&gt;&#39;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="c1">-- make pattern case-insensitive</span>
</span><span class='line'>   <span class="n">pattern</span> <span class="o">=</span> <span class="n">pattern</span><span class="p">:</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">%a&quot;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>           <span class="k">return</span> <span class="nb">string.format</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">[%s%s]&quot;</span><span class="p">,</span> <span class="nb">string.lower</span><span class="p">(</span><span class="n">c</span><span class="p">),</span>
</span><span class='line'>                                          <span class="nb">string.upper</span><span class="p">(</span><span class="n">c</span><span class="p">))</span>
</span><span class='line'>         <span class="k">end</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>   <span class="n">response</span> <span class="o">=</span> <span class="n">follow_redirects</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">redirects</span><span class="p">)</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">response</span><span class="p">.</span><span class="n">body</span><span class="p">:</span><span class="n">match</span><span class="p">(</span><span class="n">pattern</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
