<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sysadmin | citizen428.blog()]]></title>
  <link href="http://citizen428.net/blog/categories/sysadmin/atom.xml" rel="self"/>
  <link href="http://citizen428.net/"/>
  <updated>2013-09-01T23:23:22+08:00</updated>
  <id>http://citizen428.net/</id>
  <author>
    <name><![CDATA[Michael Kohl]]></name>
    <email><![CDATA[citizen428@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fixing Grub on a LUKS-encrypted Disk]]></title>
    <link href="http://citizen428.net/blog/2011/10/17/fixing-grub-on-a-luks-encrypted-disk/"/>
    <updated>2011-10-17T15:41:00+08:00</updated>
    <id>http://citizen428.net/blog/2011/10/17/fixing-grub-on-a-luks-encrypted-disk</id>
    <content type="html"><![CDATA[<p>When I rebooted my new work notebook (a very nice x201s, with a dual-core i7, 8GB RAM and an SSD by the way), it seemed that for whatever reason there was no Grub installed. Strange, but not the only problem I had with the alternate Ubuntu installer that I used for setting up <a href="http://en.wikipedia.org/wiki/Linux_Unified_Key_Setup">LUKS-encrypted</a> root and swap partitions. Since this turned out to be more involved than I originally thought, I decided to document what I did to maybe save others the trouble. BTW: You&rsquo;ll need a Linux Live-CD for this, I recommend the excellent Debian-based <a href="http://grml.org/">Grml</a>.</p>

<p>First we need to open the LUKS partition, which can be done with <a href="http://linux.die.net/man/8/cryptsetup">cryptsetup</a>.</p>

<p>{% codeblock lang:bash Step 1: Unlock LUKS %}
$ cryptsetup luksOpen /dev/<device> <name></p>

<h1>you&rsquo;ll be asked for your password</h1>

<p>{% endcodeblock %}</p>

<p>With that out of the way, you&rsquo;ll have to mount your LVM volumes. This took me a bit because my VG wasn&rsquo;t active, but thanks to an excellent blog post I found (see sources) this problem was solved quickly.</p>

<p>{% codeblock lang:bash Step 2: Mounting LVM %}</p>

<h1>do a lvm disk scan</h1>

<p>$ lvmdiskscan</p>

<h1>activate the volume group</h1>

<p>$ vgchange -ay</p>

<h1>make sure the VG is active now</h1>

<p>$ lvscan</p>

<h1>mount the actual volume</h1>

<p>$ mount /dev/&lt;volume_group_name>/<volume> /mnt/external
{% endcodeblock %}</p>

<p>I then needed to mount the unencrypted <code>/boot</code> partition as well as some special filesystems (with bind mounts) at the appropriate mount points.</p>

<p>{% codeblock lang:bash Step 3: Preparing for the chroot %}</p>

<h1>mount the boot partion</h1>

<p>$ mount /dev/<device> /mnt/external/boot</p>

<h1>bind mount some things we need in the chroot env</h1>

<p>$ mount &mdash;bind /dev /mnt/external/dev
$ mount &mdash;bind /proc /mnt/external/proc
$ mount &mdash;bind /sys /mnt/external/sys
{% endcodeblock %}</p>

<p>With everything set up, all that&rsquo;s left to do is <code>chroot</code>ing into the system and fixing Grub.</p>

<p>{% codeblock lang:bash Step 4: chrooting and fixing Grub %}
$ chroot /mnt/external
chroot$  grub-setup # grub-install, whatever you need
{% endcodeblock %}</p>

<p>Sources:</p>

<ul>
<li><a href="http://www.shallowsky.com/blog/linux/luks-encryption.html">Creating and mounting a LUKS encrypted disk</a></li>
<li><a href="http://pissedoffadmins.com/?p=481">mount: unknown filesystem type ‘LVM2_member’</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
