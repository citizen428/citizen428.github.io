<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mac | citizen428.blog()]]></title>
  <link href="http://citizen428.net/blog/categories/mac/atom.xml" rel="self"/>
  <link href="http://citizen428.net/"/>
  <updated>2012-05-04T19:16:54+02:00</updated>
  <id>http://citizen428.net/</id>
  <author>
    <name><![CDATA[Michael Kohl]]></name>
    <email><![CDATA[citizen428@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Major changes in ClojureX]]></title>
    <link href="http://citizen428.net/blog/2010/02/21/major-changes-in-clojurex/"/>
    <updated>2010-02-21T00:00:00+01:00</updated>
    <id>http://citizen428.net/blog/2010/02/21/major-changes-in-clojurex</id>
    <content type="html"><![CDATA[<p>When ClojureX was started it tried to be everything for everybody. Not only did it checkout and compile the git HEADs of clojure, clojure-contrib and jline, it also (optionally) downloaded packages for Clojure support in TextMate or Emacs, configured and installed them. This has two obvious drawbacks. First off, people end up downloading stuff they don't need. With current disk sizes and connection speeds that's probably not much of a problem, but some users may still find annoying. More importantly though it was hard to keep up with the upstream changes, e.g. clojure-contrib's recent switch to Maven.</p>

<p>So now instead of trying to provide a one-size-fits-all solution I'm taking a totally different approach: from now on ClojureX will only contain the most recent <em>stable</em> releases of clojure, clojure-contrib and jline, as well as a very full-featured clj script:</p>

<script src="http://gist.github.com/310392.js?file=ClojureX+help"></script>


<p>I know that this potentially makes ClojureX less useful to some people, but I do believe that it's one of the fastest and most painless ways to set up a Clojure development environment.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing MacPorts on Snow Leopard]]></title>
    <link href="http://citizen428.net/blog/2009/10/19/fixing-macports-on-snow-leopard/"/>
    <updated>2009-10-19T00:00:00+02:00</updated>
    <id>http://citizen428.net/blog/2009/10/19/fixing-macports-on-snow-leopard</id>
    <content type="html"><![CDATA[<pre><code>&lt;p&gt;After upgrading to Snow Leopard I had quite a bit of trouble with my &lt;a href="http://www.macports.org/"&gt;MacPorts&lt;/a&gt; installation, since most builds just failed with configure errors. After the obvious first steps of installing a newer version for SL and making sure I have the most recent XCode, I was a bit stumped until I finally found this site:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://trac.macports.org/wiki/Migration"&gt;Migrating a MacPorts install to a new major OS version or CPU architecture&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After finding this guide &amp;#8211; which btw really solved my problems &amp;#8211; I felt a bit stupid, but since I didn&amp;#8217;t have to do anything after the Tiger-&gt;Leopard upgrade, I really didn&amp;#8217;t expect this.&lt;/p&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyOSA: Google lyrics for current iTunes track]]></title>
    <link href="http://citizen428.net/blog/2009/03/18/rubyosa-google-lyrics-for-current-itunes-track/"/>
    <updated>2009-03-18T00:00:00+01:00</updated>
    <id>http://citizen428.net/blog/2009/03/18/rubyosa-google-lyrics-for-current-itunes-track</id>
    <content type="html"><![CDATA[<script src="http://gist.github.com/81399.js"></script>


<p>Adjust to your liking. :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyLearning got a new mentor with shiny Shoes and a Mac]]></title>
    <link href="http://citizen428.net/blog/2009/02/01/rubylearning-got-a-new-mentor-with-shiny-shoes-and-a-mac/"/>
    <updated>2009-02-01T00:00:00+01:00</updated>
    <id>http://citizen428.net/blog/2009/02/01/rubylearning-got-a-new-mentor-with-shiny-shoes-and-a-mac</id>
    <content type="html"><![CDATA[<p>Since I currently have quite a lot of time but am slightly on the poor side (as we all know: 'money = has_time ? 0 : loads.to_i') I decided to join batch 10 of <a href="http://rubylearning.org/class/">RubyLearning's</a> free online core Ruby programming course. In my opinion the course is <em>very</em> good, so if you always wanted to learn Ruby but couldn't find the motivation alone, definitely give this a try! But since I myself am not exactly new to Ruby, it so happened that after the first week of the course I now joined the RubyLearning team as a mentor. Glad to be part of the gang, folks! :)</p>

<p>Yesterday "I blogged":http://citizen428.net/archives/353-The-first-steps-in-new-Shoes.html about my first experiments with "Shoes":http://shoooes.net/ and thanks to some feedback by "ashbb":http://ashbb.github.com/ a newer version of the "Little Helper":http://the-shoebox.org/apps/126 is now available. And since I plan on doing some more experiments with Shoes, I also started a "repo called littlesteps":http://github.com/citizen428/littlesteps/tree/master on Github where I will keep the source for all those nice little application.</p>

<p>Finally a bit of good news for all you Ruby on MacOS X fans out there: there soon will be new versions of the "Ruby One-Click Installer for OSX":http://rubyosx.rubyforge.org/ for Ruby 1.9.1! :) The "maintainer":http://wiki.rubyonrails.org/rails/pages/parasew is a friend of mine, so I tried to convince him to include "rspec":http://rspec.info/ and "cheats":http://cheat.errtheblog.com/ in the next release, let's see if we'll get them...</p>

<p>Some links:
"waveninja's Ten Steps in Shoes, part 2":http://waveninja.blogspot.com/2009/01/ten-steps-in-shoes-step-2-stack-flow.html
"ashbb's Shoes Tutorial":http://github.com/ashbb/shoes_tutorial_html/tree/master</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Freie Editoren braucht das Land]]></title>
    <link href="http://citizen428.net/blog/2009/01/29/freie-editoren-braucht-das-land/"/>
    <updated>2009-01-29T00:00:00+01:00</updated>
    <id>http://citizen428.net/blog/2009/01/29/freie-editoren-braucht-das-land</id>
    <content type="html"><![CDATA[<p>Geht es um Text-Editoren für MacOS X führt kaum ein Weg an <a href="http://macromates.com/">TextMate</a> vorbei, als freie Alternative ist <a href="http://tuppis.com/smultron/">Smultron</a> sehr beliebt.</p>

<p>Mit <a href="http://code.google.com/p/macvim/">MacVim</a> steht nun aber auch endlich ein vernünftiger Port des Unix-Veteranen <a href="http://www.vim.org/">Vim</a> zur Verfügung, welcher nichts mit der veralteten <a href="http://macvim.org/">Carbon-Version</a> zu tun hat. Vim hat zwar eine deutlich steilere Lernkurve als andere Editoren, hat man die Bedienung aber einmal gemeistert, wird man mit ungeahnter Flexibilität und Effizienz belohnt. Da MacVim typische Tastaturkürzel wie ?Z, ?V und ?A versteht, können sich Neulinge langsam an die Bedienung des Editors heranzutasten ohne sofort eine Vielzahl an Kommandos lernen zu müssen. Darüber hinaus bietet das Programm transparente Hintergründe, einen Vollbild-Modus sowie volle Unterstützung für Multibyte-Text. Insgesamt eine sehr gelungene Portierung, welche die Vorzüge von Vim und MacOS X optimal verbindet.</p>

<p>Links:
<a href="http://code.google.com/p/macvim/wiki/FAQ">MavVim FAQ</a>
<a href="http://thomer.com/vi/vi.html">The Vi Lovers Home Page</a>
<a href="http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html">Graphical vi-vim Cheat Sheet and Tutorial</a>
<a href="http://stuff.citizen428.net/vimrc">Meine .vimrc</a> (ausführlich kommentiert)</p>

<p>(Originally published by me on <a href="http://www.opensourcemac.de/2009/01/29/freie-editoren-braucht-das-land/">open.source.mac</a> on Jan 29th 2009.)</p>
]]></content>
  </entry>
  
</feed>
