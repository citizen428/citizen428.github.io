<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | citizen428.blog()]]></title>
  <link href="http://citizen428.net/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://citizen428.net/"/>
  <updated>2012-05-14T23:49:32+02:00</updated>
  <id>http://citizen428.net/</id>
  <author>
    <name><![CDATA[Michael Kohl]]></name>
    <email><![CDATA[citizen428@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress Customizations]]></title>
    <link href="http://citizen428.net/blog/2011/10/10/octopress-customizations/"/>
    <updated>2011-10-10T19:59:00+02:00</updated>
    <id>http://citizen428.net/blog/2011/10/10/octopress-customizations</id>
    <content type="html"><![CDATA[<p>I finally found some time to give this blog a less generic look, which was really easy thanks to <a href="http://octopress.org/docs/theme/">Octopress's great theme and customization support</a>.</p>

<p>First I changed some colors in <code>sass/custom/_colors.scss</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sass'><span class='line'><span class="na">$header-bg</span><span class="o">:</span> <span class="mh">#000</span><span class="err">;</span>
</span><span class='line'><span class="na">$subtitle-color</span><span class="o">:</span> <span class="nf">lighten</span><span class="p">(</span><span class="nv">$header-bg</span><span class="o">,</span> <span class="mi">58</span><span class="p">)</span><span class="err">;</span>
</span><span class='line'><span class="na">$nav-bg</span><span class="o">:</span> <span class="nf">desaturate</span><span class="p">(</span><span class="nf">lighten</span><span class="p">(</span><span class="mh">#FF7100</span><span class="o">,</span> <span class="mi">18</span><span class="p">)</span><span class="o">,</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="na">$link-color</span><span class="o">:</span> <span class="mh">#FF7100</span><span class="err">;</span>
</span><span class='line'><span class="na">$footer-bg</span><span class="o">:</span> <span class="mh">#CCC</span><span class="err">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Then I reduced the width of the body, the size of the dates and article titles as well as the codeblocks (all of this can be done in <code>sass/custom/_styles.scss</code>):</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='sass'><span class='line'><span class="nt">body</span> <span class="err">{</span>
</span><span class='line'>  <span class="na">max-width</span><span class="o">:</span> <span class="mi">1100</span><span class="kt">px</span><span class="err">;</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'><span class="nt">time</span> <span class="err">{</span>
</span><span class='line'>  <span class="na">font-size</span><span class="o">:</span> <span class="mi">14</span><span class="kt">px</span><span class="err">;</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'><span class="nt">h1</span> <span class="err">{</span>
</span><span class='line'>  <span class="na">font-size</span><span class="o">:</span> <span class="mi">2</span><span class="mf">.2</span><span class="kt">em</span><span class="err">;</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'><span class="nt">section</span> <span class="err">{</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">blockquote</span><span class="o">&gt;&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="nt">h1</span> <span class="err">{</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="na">&lt;pre&gt;&lt;code&gt;font-size</span><span class="o">:</span> <span class="mi">1</span><span class="mf">.5</span><span class="kt">em</span><span class="err">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">code</span><span class="o">&gt;&lt;/</span><span class="nt">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span>  <span class="err">}</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'><span class="nt">codeblock</span> <span class="err">{</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="na">&lt;pre&gt;&lt;code&gt;font-size</span><span class="o">:</span> <span class="mi">1</span><span class="mf">.1</span><span class="kt">em</span><span class="err">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">code</span><span class="o">&gt;&lt;/</span><span class="nt">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<p>Last but not least I found some <a href="http://www.elegantthemes.com/blog/resources/free-social-media-icon-set">excellent free social media icons</a> for the sidebar.</p>

<p>I hope you like the changes, I do and I was also pleasantly surprised how easy it is to change the look of an Octopress blog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Templates]]></title>
    <link href="http://citizen428.net/blog/2011/09/27/octopress-templates/"/>
    <updated>2011-09-27T16:58:00+02:00</updated>
    <id>http://citizen428.net/blog/2011/09/27/octopress-templates</id>
    <content type="html"><![CDATA[<p>When deciding to switch from Wordpress to Octopress one of the main reasons was that I don't need most of the advanced features the former offers. However, for my weekly <a href="http://citizen428.net/blog/categories/informationoverload/">Information Overload</a> series I relied on two features, namely templates and scheduling: I created a new post from the template and then filled it with content over the week. Once I was done I'd schedule it for publishing on Sunday afternoon. Here's how I plan to do this with Octopress.<!-- more --></p>

<h2>Templating</h2>

<p>I created a new Rake task named "new_overload", that looks like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="s2">&quot;Create a new Information Overload template </span><span class="si">#{</span><span class="n">source_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">posts_dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:new_overload</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">raise</span> <span class="s2">&quot;### You haven&#39;t set anything up yet. First run &lt;code&gt;rake install&lt;/code&gt; to set up an Octopress theme.&quot;</span> <span class="k">unless</span> <span class="no">File</span><span class="o">.</span><span class="n">directory?</span><span class="p">(</span><span class="n">source_dir</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;date&#39;</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;./plugins/titlecase.rb&#39;</span>
</span><span class='line'>  <span class="n">mkdir_p</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">source_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">posts_dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">date</span> <span class="o">=</span> <span class="p">(</span><span class="no">Date</span><span class="o">.</span><span class="n">today</span> <span class="o">+</span> <span class="p">(</span><span class="mi">7</span><span class="o">-</span><span class="no">Date</span><span class="o">.</span><span class="n">today</span><span class="o">.</span><span class="n">wday</span><span class="p">))</span>
</span><span class='line'>  <span class="n">title</span> <span class="o">=</span> <span class="s2">&quot;Information Overload </span><span class="si">#{</span><span class="n">date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%d&quot;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">filename</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">source_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">posts_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-%d&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="n">title</span><span class="o">.</span><span class="n">to_url</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">new_post_ext</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;abort(&quot;rake aborted!&quot;) if ask(&quot;</span><span class="si">#{</span><span class="n">filename</span><span class="si">}</span><span class="sr"> already exists. Do you want to overwrite?&quot;, [&#39;y&#39;, &#39;n&#39;]) == &#39;n&#39;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">  puts &quot;Creating new post: </span><span class="si">#{</span><span class="n">filename</span><span class="si">}</span><span class="sr">&quot;</span>
</span><span class='line'><span class="sr">  open(filename, &#39;w&#39;) do |post|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nb">system</span> <span class="s2">&quot;mkdir -p </span><span class="si">#{</span><span class="n">source_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">posts_dir</span><span class="si">}</span><span class="s2">/&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;---&quot;</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;layout: post&quot;</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;title: </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">title</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/&amp;amp;/</span><span class="p">,</span><span class="s1">&#39;&amp;amp;amp;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">titlecase</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;date: </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-%d %H:%M&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;comments: true&quot;</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;categories: &quot;</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;published: false&quot;</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;---&quot;</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;* []()</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="o">*</span> <span class="mi">10</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This is very similar to the standard "new_post" task, but generates
the post with the date of the current week's Sunday. It also marks it
as a draft by adding "published: false" to the YAML header and inserts
a template for an unordered list in Markdown syntax.</p>

<p>I'm not exactly sure how to handle the scheduling yet, but I think
good old <a href="http://en.wikipedia.org/wiki/At_(Unix">at</a> will come in
handy here.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye Wordpress]]></title>
    <link href="http://citizen428.net/blog/2011/09/26/goodbye-wordpress/"/>
    <updated>2011-09-26T21:00:00+02:00</updated>
    <id>http://citizen428.net/blog/2011/09/26/goodbye-wordpress</id>
    <content type="html"><![CDATA[<p>After using <a href="http://wordpress.org/">Wordpress</a> as my blogging engine
of choice for over a year (after moving away from <a href="http://s9y.org/">S9Y</a>), I decided to switch this site to
<a href="http://octopress.org/">Octopress</a>. Why? Because it's cool!
No, seriously. I was actually quite happy with WP, it just always felt
like way more than I actually needed. OP on the other hand is super
lightweight, ritten in Ruby and uses some of my favorite technologies,
like Sinatra and Markdown. It doesn't stop there though: having the site rendered to static
files means I can get rid of MySQL and PHP on my little VPS, which
definitely is a plus. And it's also very cool to have all your posts
in a directory on your local file system, so you can use all your
favorite command line tools to search through or batch modify
them. Last but not least I'm now writing my posts in Emacs instead of
some crappy web input form (ok, granted, I could have done that before
too).</p>

<p>Now to the actual migration. I started by exporting my WP blog to
XML. This can be done in the administration backend under "Tools -
Export". Once I had this XML, I used the following script to convert
the posts to individual files for Octopress:</p>

<p><div><script src='https://gist.github.com/1240781.js?file='></script>
<noscript><pre><code>require 'fileutils'
require 'date'
require 'yaml'
require 'rexml/document'

include REXML

doc = Document.new(File.new(ARGV[0]))

FileUtils.mkdir_p &quot;_posts&quot;

doc.elements.each(&quot;rss/channel/item[wp:status = 'publish' and wp:post_type = 'post']&quot;) do |e|
  p e.elements['wp:post_name'].text
  post = e.elements
  slug = post['wp:post_name'].text
  date = DateTime.parse(post['wp:post_date'].text)
  name = &quot;%02d-%02d-%02d-%s.textile&quot; % [date.year, date.month, date.day, slug]
  date_string = &quot;#{date.year}-#{date.month}-#{date.day}&quot;

  # convert all tags and categories into categories
  categories = []
  post.each('category') do |cat|
    categories &lt;&lt; cat.text
  end

  content = post['content:encoded'].text.encode(&quot;UTF-8&quot;)

  # convert &lt;code&gt;&lt;/code&gt; blocks to {% codeblock %}{% encodebloc %}
  #content = content.gsub(/&lt;code&gt;(.*?)&lt;\/code&gt;/, '`\1`')
  content = content.gsub(/&lt;code&gt;/, '{% codeblock %}')
  content = content.gsub(/&lt;\/code&gt;/, '{% endcodeblock %}')

  # convert &lt;pre&gt;&lt;/pre&gt; blocks to {% codeblock %}{% encodebloc %}
  #content = content.gsub(/&lt;pre lang=&quot;([^&quot;]*)&quot;&gt;(.*?)&lt;\/pre&gt;/m, '`\1`')
  content = content.gsub(/&lt;pre&gt;/, '{% codeblock %}')
  content = content.gsub(/&lt;pre lang=&quot;([^&quot;]*)&quot;&gt;/, '{% codeblock %}')
  content = content.gsub(/&lt;\/pre&gt;/m, '{% endcodeblock %}')

  # convert headers
  (1..3).each do |i|
    content = content.gsub(/&lt;h#{i}&gt;([^&lt;]*)&lt;\/h#{i}&gt;/, ('#'*i) + ' \1')
  end

  puts &quot;Converting: #{name}&quot;

  data = {
    'layout' =&gt; 'post',
    'title' =&gt; post['title'].text,
    'date' =&gt; date_string,
    'comments' =&gt; true,
    'categories' =&gt; categories,
  }.delete_if { |k,v| v.nil? || v == ''}.to_yaml

  File.open(&quot;_posts/#{name}&quot;, &quot;w&quot;) do |f|
    f.puts data
    f.puts &quot;---&quot;
    f.puts content
  end

end
</code></pre></noscript></div>
</p>

<p>This was a fork of
<a href="https://gist.github.com/1240781/ac8a139bf73232c4333f0cc5734151cf8e5d1f87">another script</a>,
but tailored for my specific needs (e.g. all tags and categories of a
post were converted to categories and I exported the files to Textile
instead of Markdown because I used the former in my WP install through
a plugin).</p>

<p>Since some of my posts are quite popular and get linked to a lot, I
didn't want to loose my old links. I therefore wrote another script
that created 301 redirects for all of them:</p>

<p><div><script src='https://gist.github.com/1241762.js?file='></script>
<noscript><pre><code>require 'date'
require 'rexml/document'

include REXML

doc = Document.new(File.new(ARGV[0]))
format = ARGV[1] || &quot;apache&quot;

formats = {
  :apache =&gt; &quot;RewriteRule ^%s$ /%s [R=301,L]&quot;,
  :nginx =&gt; &quot;rewrite ^%s /%s permanent;&quot;
}

File.open(&quot;redirects.txt&quot;, &quot;w&quot;) do |f|
  doc.elements.each(&quot;rss/channel/item[wp:status = 'publish' and wp:post_type = 'post']&quot;) do |e|
    post = e.elements
    date = DateTime.parse(post['wp:post_date'].text)
    slug = post['wp:post_name'].text

    post['link'].text =~ %r{.*(/archives/\d+)}
    old_url = $1
    new_url = &quot;blog/#{date.strftime(&quot;%Y/%m/%d&quot;)}/#{slug}/&quot;

    f.puts formats[format.intern] % [old_url, new_url]
  end
end
</code></pre></noscript></div>
</p>

<p>The script can generate the necessary directives for Apache or Nginx,
so all you have to do is copy them into your web server
configuration. I also added another redirect rule for the RSS feed to
not annoy my subscribers:</p>

<p><code>
RewriteRule ^/feed /atom.xml [R=301,L]
</code></p>

<p>Of course I also didn't want to loose all my comments, so I had to
come up with a solution for that. I first
installed the WP <a href="http://disqus.com">Disqus</a> plugin and exported all
my current comments. I then used some good old Emacs magic to convert
the list of redirects I had already generated to a CSV for Disqus'
<a href="http://docs.disqus.com/help/39/">URL map migration tool</a>. So far this
has not migrated all comments to the correct location, but it should
eventually work out (worst case I'll have to email Disqus support).</p>

<p>Last but not least I used Octopress' excellent
<a href="http://octopress.org/docs/theme/template/index.html">customization suport</a>
to re-add some stuff to my headers, like the OpenID delegate.</p>

<p>Of course there are still some things that need to be done, some of them more urgently
then others. First off this site needs a better stylesheet. The
default is actually quite ok, but I want something with more
personality. I'll also have to go through my old posts and clean them
up a bit, the automatic conversion did some funny things at
times. I also want to re-integrate Flattr and PostRank, but I'm not
exactly in a hurry when it comes to that.</p>

<p>I hope this post was useful to some of you, I'm definitely happy with
my new blogging setup.</p>
]]></content>
  </entry>
  
</feed>
