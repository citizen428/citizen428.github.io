<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: software | citizen428.blog()]]></title>
  <link href="http://citizen428.net/blog/categories/software/atom.xml" rel="self"/>
  <link href="http://citizen428.net/"/>
  <updated>2012-07-29T18:07:22+02:00</updated>
  <id>http://citizen428.net/</id>
  <author>
    <name><![CDATA[Michael Kohl]]></name>
    <email><![CDATA[citizen428@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Freie Editoren braucht das Land]]></title>
    <link href="http://citizen428.net/blog/2009/01/29/freie-editoren-braucht-das-land/"/>
    <updated>2009-01-29T00:00:00+01:00</updated>
    <id>http://citizen428.net/blog/2009/01/29/freie-editoren-braucht-das-land</id>
    <content type="html"><![CDATA[<p>Geht es um Text-Editoren für MacOS X führt kaum ein Weg an <a href="http://macromates.com/">TextMate</a> vorbei, als freie Alternative ist <a href="http://tuppis.com/smultron/">Smultron</a> sehr beliebt.</p>

<p>Mit <a href="http://code.google.com/p/macvim/">MacVim</a> steht nun aber auch endlich ein vernünftiger Port des Unix-Veteranen <a href="http://www.vim.org/">Vim</a> zur Verfügung, welcher nichts mit der veralteten <a href="http://macvim.org/">Carbon-Version</a> zu tun hat. Vim hat zwar eine deutlich steilere Lernkurve als andere Editoren, hat man die Bedienung aber einmal gemeistert, wird man mit ungeahnter Flexibilität und Effizienz belohnt. Da MacVim typische Tastaturkürzel wie ?Z, ?V und ?A versteht, können sich Neulinge langsam an die Bedienung des Editors heranzutasten ohne sofort eine Vielzahl an Kommandos lernen zu müssen. Darüber hinaus bietet das Programm transparente Hintergründe, einen Vollbild-Modus sowie volle Unterstützung für Multibyte-Text. Insgesamt eine sehr gelungene Portierung, welche die Vorzüge von Vim und MacOS X optimal verbindet.</p>

<p>Links:
<a href="http://code.google.com/p/macvim/wiki/FAQ">MavVim FAQ</a>
<a href="http://thomer.com/vi/vi.html">The Vi Lovers Home Page</a>
<a href="http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html">Graphical vi-vim Cheat Sheet and Tutorial</a>
<a href="http://stuff.citizen428.net/vimrc">Meine .vimrc</a> (ausführlich kommentiert)</p>

<p>(Originally published by me on <a href="http://www.opensourcemac.de/2009/01/29/freie-editoren-braucht-das-land/">open.source.mac</a> on Jan 29th 2009.)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Werbefrei]]></title>
    <link href="http://citizen428.net/blog/2009/01/22/werbefrei/"/>
    <updated>2009-01-22T00:00:00+01:00</updated>
    <id>http://citizen428.net/blog/2009/01/22/werbefrei</id>
    <content type="html"><![CDATA[<p>Werbung in Webseiten ist lästig, da sie nicht nur die Ladezeit der aufgerufenen Seite unnötig erhöht, sondern - besonders im Fall großer animierter Flashbanner - auch von der Benutzung der Seite ablenkt bzw. den eigentlichen Inhalt manchmal sogar gänzlich verdeckt. Aus diesem Grund gibt es auch diverse Tools um sich ihrer zu entledigen, so zum Beispiel das bekannte Firefox-Plugin <a href="https://addons.mozilla.org/en-US/firefox/addon/1865">Adblock Plus</a>. Anders sah es da bisher bei Safari aus, wo diverse Werbeblocker gemeinhin als Hacks implementiert wurden, welche einerseits die Stabilität des Browsers beeinträchtigen konnten und andererseits nach Updates auch oft den Dienst verweigerten. Damit ist jetzt aber Schluss, denn mit <a title="GlimmerBlocker" href="http://glimmerblocker.org/">GlimmerBlocker</a> gibt es endlich eine stabile und zukunftssichere Lösung, welche darüber hinaus auch noch browserunabhängig ist.</p>

<p>GlimmerBlocker ist als HTTP-Proxy implementiert, welcher bequem über ein PrefPane konfiguriert wird. Bei der Installation werden auch die Netzwerkeinstellungen automatisch angepasst, so dass alle Applikationen welche ihre Proxykonfiguration von dort beziehen von nun an den neuen Proxy verwenden (Firefox oder der Windows Messenger müssen manuell konfiguriert werden). Diese Architektur erlaubt es GlimmerBlocker und den eingesetzten Browser unabhängig voneinander aktualisieren zu können ohne Wechselwirkungen befürchten zu müssen. Allerdings hat dies auch zur Folge, dass gewisse Funktionen die man von anderen Werbeblockern kennt nicht zur Verfügung stehen, so z.B. das Blockieren eines Bildes per Rechtsklick oder das Filtern von Drittanbieter-Cookies. Durch seine vielfältigen Konfigurationsmöglichkeiten und Flexibilität (CSS-Regeln, JavaScript und HTML-Transformation) macht GlimmerBlocker dieses Manko aber durchaus wett, besonders nett ist dabei die Funktion den Proxy-Server im Netz freizugeben, so dass dieser auch von eventuell vorhandenen iPhones, iPods und anderen Computern verwendet werden kann.</p>

<p>GlimmerBlocker ist freie Software und steht unter der <a href="http://www.gnu.org/licenses/gpl.html">GPLv3</a>.</p>

<p>(Originally published by me on "open.source.mac":http://www.opensourcemac.de/2009/01/14/werbefrei/ on Jan 14th 2009.)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nützliches für die Kommandozeile]]></title>
    <link href="http://citizen428.net/blog/2009/01/22/nutzliches-fur-die-kommandozeile/"/>
    <updated>2009-01-22T00:00:00+01:00</updated>
    <id>http://citizen428.net/blog/2009/01/22/nutzliches-fur-die-kommandozeile</id>
    <content type="html"><![CDATA[<p>Nachdem MacOS X ja bekanntlich über einen <a title="Wikipedia: Darwin" href="http://de.wikipedia.org/wiki/Darwin_(Betriebssystem)">Unix-Kern</a> verfügt, steht ein Großteil der bekannten Kommandozeilen-Werkzeuge zur Verfügung. Zusätzlich gibt es aber auch noch einige macspezifische Kommandos, von denen wir heute einige vorstellen wollen.</p>

<ul>
    <li><a title="pbcopy/pbpaste manual page" href="http://developer.apple.com/DOCUMENTATION/Darwin/Reference/ManPages/man1/pbcopy.1.html">pbcopy / pbpaste</a>: mit Hilfe dieser beiden kleinen Helfer hat man von der Kommandozeile aus Zugriff auf die Zwischenablage.  So kopiert z.B. <em>cat .ssh/id_pub.dsa | pbcopy</em> einen öffentlichen SSH-Schlüssel in diese, so dass man diesen dann einfach mittels Apfel-V in der grafischen Oberfläche einfügen kann. Analog kann so im GUI kopierter Text im Terminal verwendet werden, beispielsweise um diesen mit "grep" zu durchsuchen: "<em>pbpaste | grep foo</em>"</li>
    <li><a title="say manual page" href="http://developer.apple.com/DOCUMENTATION/Darwin/Reference/ManPages/man1/say.1.html">say</a>: dieses nette Tool erlaubt die Verwendung des systemeigenen Speechsynthesizers in der Shell: <em>say "Hello"</em>. Alternativ kann man mit dem Parameter "<em>-f</em>" auch ein zu lesendes File übergeben. Standardmäßig kommt dabei die in den Systemeinstellungen verwendete Stimme zum Einsatz, dies kann mittels "<em>-v</em>" aber geändert werden.  Dies ist einerseits eine unterhaltsame Spielerei, kann aber andererseits auch von echtem Nutzen sein, zum Beispiel wenn man über die Beendigung eines lange laufenden Shell-Prozesses benachrichtigt werden will, in diesem Fall einem Download mittels <a title="curl manual page" href="http://developer.apple.com/DOCUMENTATION/Darwin/Reference/ManPages/man1/curl.1.html">curl</a>: <em>curl -O http://link.to.file/bigfile && say "Download finished"</em></li>
    <li><a title="softwareupdate manual page" href="http://developer.apple.com/DOCUMENTATION/Darwin/Reference/ManPages/man8/softwareupdate.8.html">softwareupdate</a>: dieses Kommando erlaubt das Einspielen von Systemaktualisierungen von der Kommandozeile. So zeigt etwa <em>softwareupdate -l </em>eine Liste aller verfügbarer Aktualisierungen, während <em>softwareupdate -i -a </em>alle verfügbaren Updates automatisch installiert, womit es sich hervorragend für die Automatisierung mittels <a title="at manual page" href="http://developer.apple.com/DOCUMENTATION/Darwin/Reference/ManPages/man1/at.1.html">at</a> oder <a title="cron manual page" href="http://developer.apple.com/DOCUMENTATION/Darwin/Reference/ManPages/man8/cron.8.html">cron</a> eignet. </li>
    <li><a title="screencapture manual page" href="http://developer.apple.com/DOCUMENTATION/Darwin/Reference/ManPages/man1/screencapture.1.html">screencapture</a>: OS X-Neueinsteiger fragen sich oft wie man denn auf einfache Weise einen Screenshot erstellen kann, die nicht unbedingt intuitive Antwort lautet Apfel-Shift-3. Alternativ kann dies aber auch von der Kommandozeile erfolgen. So erzeugt beispielsweise das Kommando  <em>screencapture ~/Desktop/`date +"%Y%m%d"`.png </em>einen Screenshot mit dem aktuellen Datum (im Format JJJJMMTT) auf dem Desktop des jeweiligen Benutzers. Das Tool verfügt über einige Parameter, mit denen sich auch interaktive Screenshots (Apfel-Shift-4)  anfertigen lassen.</li>
</ul>


<p>Viel Spaß beim Arbeiten mit der Kommandozeile!</p>

<p>(Origally published by me on "open.source.mac":http://www.opensourcemac.de/2009/01/21/nutzliches-fur-die-kommandozeile/ on Jan 21st 2009.)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Two nice little helpers]]></title>
    <link href="http://citizen428.net/blog/2007/06/17/two-nice-little-helpers/"/>
    <updated>2007-06-17T00:00:00+02:00</updated>
    <id>http://citizen428.net/blog/2007/06/17/two-nice-little-helpers</id>
    <content type="html"><![CDATA[<p>"Mozy Online Backup: Mac Mozy":https://mozy.com/mozy/macmozy
Been using this for around 2 weeks now, really sweet! If you want to sign up, please use this "referal link":https://mozy.com/?ref=ABK655 which gives both of us more space (of course this also works when you're going to sign up to use the Windows version).</p>

<p>"Spanning Sync":http://spanningsync.com/
<em>Synchronize Google Calendar and Apple iCal. Share calendars between multiple Macs. Share calendars with your coworkers, family, and friends. And while you're at it, connect Google Calendar to your iPod, mobile phone, and other devices.</em> Finally a tool I can use to sync iCal and Google Calendar in <em>both</em> directions!</p>

<p>Pungenday, Confusion 22, 3173 YOLD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What a waste]]></title>
    <link href="http://citizen428.net/blog/2005/11/06/what-a-waste/"/>
    <updated>2005-11-06T00:00:00+01:00</updated>
    <id>http://citizen428.net/blog/2005/11/06/what-a-waste</id>
    <content type="html"><![CDATA[<p>I just wasted two hours fixing a problem that maybe wasn't one to begin with. Don't you just love it when software starts acting strange for no obvious reason, and you have nfc what's going on? And then suddenly, when you're about to finally throw that frigging PC out of the window so you can once and for all start your new career as buddhist mendicant, it just starts working again as if nothing ever happened.</p>

<p>Given that my free time is currently rather limited, I'm pretty pissed at the moment, as I've tried really hard to have some spare hours this afternoon to spend on some personal projects of mine. Ok, I'm talking about software projects, and maybe I also would have wasted hours chasing some stupid bug. But at least it would have been <em>MY</em> bug, and I would even have considered it to be fun. Strange, eh?</p>

<p>Setting Orange, The Aftermath 18, 3171 YOLD</p>
]]></content>
  </entry>
  
</feed>
