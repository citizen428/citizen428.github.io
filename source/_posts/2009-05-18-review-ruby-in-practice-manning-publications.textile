--- 
layout: post
title: "Review: Ruby in Practice (Manning Publications)"
date: 2009-5-18
comments: true
categories: 
- books
- programming
- review
- ruby
- rubylearning
---
I read "Ruby in Practice":http://www.manning.com/mcanally/ for the "upcoming book promotion":http://rubylearning.com/blog/2009/05/12/book-promotion-ruby-in-practice/ on "RubyLearning":http://www.rubylearning.org, and I have to say it's a pretty neat book which will be well worth your time and money. Over the course of 360 pages Jeremy McAnally and Assaf Arkin tackle lots of different topics of interest to developers. The book is structured in 3 main parts: 

<ul>
<li>Ruby techniques: Gives a general introduction to Ruby's strength (which sometimes reads as a bit of a sales pitch), "BDD":http://en.wikipedia.org/wiki/Behavior_Driven_Development and "TDD":http://en.wikipedia.org/wiki/Test-driven_development, as well as scripting with Ruby (including "OLE":http://en.wikipedia.org/wiki/Object_Linking_and_Embedding and "OSA":http://en.wikipedia.org/wiki/AppleScript).</li>
<li>Integration and communication: This part covers Rails, web services in general (HTTP, "REST":http://en.wikipedia.org/wiki/Representational_State_Transfer, <a href="http://en.wikipedia.org/wiki/SOAP_(protocol)">SOAP</a>), automating communication with email and IM, asynchronous messaging and deployment options.</li>
<li>Data and document techniques: This part talks about databases, structured text, authentication, searching, indexing and document processing.</li>
</ul> 

Chapters usually present the reader with a problem, then show an example solution which usually makes good use of existing libraries and then finish with further discussion on the topic (alternative ways to implement it, pitfalls in using the shown solution in "real life" scenarios etc.). For people with previous knowledge of Ruby this book is a good read, which shows how the dynamic nature of the language combined with the quite big amount of readily available libraries enable developers to quickly and efficiently find solutions to common problems. I sometimes do have minor quirks with some of the code, but that's just personal preferences and being nitpicky. All in all it's a very solid book which I enjoy quite a lot. 
